worker_processes  1;
# daemon off to be able to run in container
daemon off;

events {
    worker_connections  1024;
}

http {
    vhost_traffic_status_zone;

    upstream example {
        server web-server1:80;
        server web-server2:80;
        check interval=2000 rise=3 fall=1 timeout=1000 type=http;  # nginx_upstream_check_module
        #check interval=5000 rise=1 fall=3 timeout=4000;

        #check interval=3000 rise=2 fall=5 timeout=1000 type=ssl_hello;
       
        #check_http_send "HEAD / HTTP/1.0\r\n\r\n";
        #check_http_expect_alive http_2xx http_3xx;
    }

    server {
        listen 80 default_server;
        server_name vts_exporter;
        location /status {
            vhost_traffic_status_display;  # nginx-module-vts
            vhost_traffic_status_display_format html;
        }

        location /upstream_check {
            check_status;  # nginx_upstream_check_module
        }

        location = /basic_status {
            stub_status;  # ngx_http_stub_status_module
            }
    }

    server {
        listen 80;
        server_name www.example.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        server_name www.example.com;
        listen 443 ssl;
        ssl_certificate /usr/local/nginx/ssl/cert.crt;
        ssl_certificate_key /usr/local/nginx/ssl/cert.key;
        proxy_connect_timeout 6000;
        proxy_send_timeout 6000;
        proxy_read_timeout 6000;
        send_timeout 6000;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://example;
            #proxy_next_upstream error timeout http_500;
        }
        location /status {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
        }
    }
}
